name: Coverage Report for PR
on:
  pull_request:
jobs:
  Update-Coverage-on-PR:
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v2

      - name: Set up Python 3.8
        uses: actions/setup-python@v2
        with:
          python-version: 3.8

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install flake8 pytest pytest-cov
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

      - name: Build coverage file
        run: |
          pytest --junitxml=pytest_cov.xml --cov-report term-missing:skip-covered --cov=apps  | tee pytest-coverage.txt

      - name: Pytest coverage comment
        id: coverageComment
        uses: MishaKav/pytest-coverage-comment@main
        with:
          pytest-coverage-path: pytest-coverage.txt
          junitxml-path: pytest_cov.xml
          badge-title: Coverage

      - name: Check the output coverage
        run: |
          echo "Coverage Percantage - ${{ steps.coverageComment.outputs.coverage }}"
          echo "Coverage Color - ${{ steps.coverageComment.outputs.color }}"
          echo "Coverage Html - ${{ steps.coverageComment.outputs.coverageHtml }}"
          echo "Coverage Warnings - ${{ steps.coverageComment.outputs.warnings }}"
          echo "Coverage Errors - ${{ steps.coverageComment.outputs.errors }}"
          echo "Coverage Failures - ${{ steps.coverageComment.outputs.failures }}"
          echo "Coverage Skipped - ${{ steps.coverageComment.outputs.skipped }}"
          echo "Coverage Tests - ${{ steps.coverageComment.outputs.tests }}"
          echo "Coverage Time - ${{ steps.coverageComment.outputs.time }}"
          echo "Not Success Test Info - ${{ steps.coverageComment.outputs.notSuccessTestInfo }}"
      # - name: Create the Badge
      #   uses: schneegans/dynamic-badges-action@v1.0.0
      #   with:
      #     auth: ${{ secrets.GIST_SECRET }}
      #     gistID: fa30c0cc061747ad9bfd1cebc9f946e8
      #     filename: pytest-coverage-comment__pr.json
      #     label: Coverage
      #     message: ${{ steps.coverageComment.outputs.coverage }}
      #     color: ${{ steps.coverageComment.outputs.color }}
          